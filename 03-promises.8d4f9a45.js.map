{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAGA,MAAMC,EAAK,CACTC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,kBAC9BE,KAAMH,SAASC,cAAc,iBAC7BG,OAAQJ,SAASC,cAAc,oBAKjC,SAASI,EAAcC,EAAUJ,GAC/B,OAAO,IAAIK,SAAQ,CAACC,EAAQC,KAC1BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAACF,E,MAAUJ,IAEnBO,EAAO,C,SAACH,E,MAAUJ,GAAO,GAE3BA,EAAM,G,CAXZJ,EAAKC,KAAKc,iBAAiB,UAiB3B,SAA8BC,GAC5BA,EAAEC,iBAEF,IAAIC,EAAalB,EAAKI,MAAMe,cAC5B,MAAMC,EAAkBpB,EAAKK,KAAKc,cAC5BE,EAAerB,EAAKM,OAAOa,cAEjC,IAAM,IAAIG,EAAW,EAAGA,GAAYD,EAAcC,IAChDf,EAAce,EAAUJ,GACvBK,MAAK,EAACf,SAAEA,EAAQJ,MAAEA,MAEjBoB,EAAA1B,GAAS2B,OAAOC,QACd,uBAAqBlB,QAAiBJ,MAAU,IAGnDuB,OAAM,EAACnB,SAAEA,EAAQJ,MAAEA,MAElBoB,EAAA1B,GAAS2B,OAAOG,QACd,sBAAoBpB,QAAeJ,MAAU,IAGjDc,GAAcE,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix, { Notify } from 'notiflix';\nimport 'notiflix/dist/notiflix-3.2.6.min.css';\n\nconst refs={\n  form: document.querySelector('.form'),\n  delay: document.querySelector('[name=\"delay\"]'),\n  step: document.querySelector('[name=\"step\"]'),\n  amount: document.querySelector('[name=\"amount\"]'),\n}\n\nrefs.form.addEventListener('submit',onSubmitCreatePromis);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve,reject)=>{\n    setTimeout(()=>{\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({position, delay})\n      } else {\n        reject({position, delay})\n      } \n    },delay);\n  });\n \n}\n\n\nfunction onSubmitCreatePromis(e) {\n  e.preventDefault();\n\n  let delayInput = refs.delay.valueAsNumber;\n  const delayStepNumber = refs.step.valueAsNumber;\n  const amountNumber = refs.amount.valueAsNumber;\n\n  for ( let position = 1; position <= amountNumber; position++) {\n    createPromise(position, delayInput)\n    .then(({ position, delay }) => {\n      // console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      Notiflix.Notify.success(\n        `✅ Fulfilled promise ${position} in ${delay}ms`\n      );\n    })\n    .catch(({ position, delay }) => {\n      // console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      Notiflix.Notify.failure(\n        `❌ Rejected promise ${position} in ${delay}ms`\n      );\n    });\n    delayInput += delayStepNumber;\n  }\n}"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","delay","step","amount","$47d4ff9957288465$var$createPromise","position","Promise","resolve","reject","setTimeout","Math","random","addEventListener","e","preventDefault","delayInput","valueAsNumber","delayStepNumber","amountNumber","position1","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.8d4f9a45.js.map"}